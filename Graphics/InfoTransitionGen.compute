// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain


Texture2D<float4> InputTexture1;
Texture2D<float4> InputTexture2;
RWTexture2D<float4> OutputTexture;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    uint2 texSize1 = InputTexture1.GetDimensions();
    uint2 texSize2 = InputTexture2.GetDimensions();
    uint last25PercentWidth = texSize1.x / 4;

    if (id.x < last25PercentWidth)
    {
        // Copy the last 25% of InputTexture1 to the beginning of InputTexture2
        float4 texel1 = InputTexture1[uint2(texSize1.x - last25PercentWidth + id.x, id.y)];
        InputTexture2[id.xy] = texel1;

        // Copy the same color to the output texture
        OutputTexture[id.xy] = texel1;
    }
    else
    {
        // For the remaining part of InputTexture2, copy the original color from InputTexture2
        float4 texel2 = InputTexture2[id.xy];
        OutputTexture[id.xy] = texel2;
    }
}
